[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode depth_draw_always; // Remove this line if you're not on the transparency pipeline.

uniform vec4 albedo : hint_color = vec4(1.0);
uniform sampler2D texture_albedo : hint_albedo;

uniform float rim : hint_range(0,1) = 0.5;
uniform float rim_amount : hint_range(0,1) = 0.2;
uniform float rim_smoothness : hint_range(0,1) = 0.05;
uniform vec4 rim_color : hint_color = vec4(1.0);
uniform sampler2D texture_rim : hint_white;

uniform vec4 gradient_add : hint_color = vec4(1.0);

void fragment() {
	ALBEDO = albedo.rgb * texture(texture_albedo, UV).rgb;
	ALPHA = 1.0;
	
	float rim_value = rim * texture(texture_rim, UV).r;
	float rim_width = rim_amount * texture(texture_rim, UV).g;
	float rim_smooth = rim_smoothness * texture(texture_rim, UV).b;
	
	float rim_dot = 1.0 - dot(NORMAL, VIEW);
	float rim_threshold = pow((1.0 - rim_width), dot(VIEW, NORMAL));
	float rim_intensity = smoothstep(rim_threshold - rim_smooth/2.0, rim_threshold + rim_smooth/2.0, rim_dot);
	ALBEDO -= (rim_color.rgb * rim_color.a) * rim_value * rim_intensity;
}
"
